import{n as p}from"./index-CyFq9ppu.js";const u=typeof btoa=="function",l=typeof Buffer=="function";typeof TextDecoder=="function"&&new TextDecoder;typeof TextEncoder=="function"&&new TextEncoder;const d="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",n=Array.prototype.slice.call(d);(r=>{let t={};return r.forEach((e,o)=>t[e]=o),t})(n);const b=String.fromCharCode.bind(String);typeof Uint8Array.from=="function"&&Uint8Array.from.bind(Uint8Array);const g=r=>r.replace(/=/g,"").replace(/[+\/]/g,t=>t=="+"?"-":"_"),h=r=>{let t,e,o,a,s="";const i=r.length%3;for(let c=0;c<r.length;){if((e=r.charCodeAt(c++))>255||(o=r.charCodeAt(c++))>255||(a=r.charCodeAt(c++))>255)throw new TypeError("invalid character found");t=e<<16|o<<8|a,s+=n[t>>18&63]+n[t>>12&63]+n[t>>6&63]+n[t&63]}return i?s.slice(0,i-3)+"===".substring(i):s},m=u?r=>btoa(r):l?r=>Buffer.from(r,"binary").toString("base64"):h,f=l?r=>Buffer.from(r).toString("base64"):r=>{let e=[];for(let o=0,a=r.length;o<a;o+=4096)e.push(b.apply(null,r.subarray(o,o+4096)));return m(e.join(""))},x=(r,t=!1)=>t?g(f(r)):f(r),K=()=>{const r=p.box.keyPair();return{privateKey:r.secretKey,publicKey:r.publicKey}},y=r=>x(r),C=r=>{const t=y(r.privateKey),e=y(r.publicKey);return JSON.stringify({privateKey:t,publicKey:e})};export{C as e,K as g};
