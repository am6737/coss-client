{"version":3,"file":"Profile-CBROBEFF.js","sources":["../../src/pages/Profile/Profile.tsx"],"sourcesContent":["import { Icon, Link, List, ListButton, ListItem, Navbar, Page, Toggle } from 'framework7-react'\nimport { useMemo, useState } from 'react'\nimport { $t, MessageBurnAfterRead, MessageNoDisturb, RelationStatus, confirmMessage, toastMessage } from '@/shared'\nimport UserService from '@/api/user'\nimport RelationService from '@/api/relation'\nimport { useLiveRoomStore } from '@/stores/liveRoom'\nimport { useLiveStore } from '@/stores/live'\nimport Avatar from '@/components/Avatar/Avatar.tsx'\nimport useMessageStore from '@/stores/message'\nimport useCacheStore from '@/stores/cache'\nimport useLoading from '@/hooks/useLoading'\nimport { getFriendList, getRemoteSession } from '@/run.ts'\n\nconst times = [\n\t{ label: $t('10秒'), value: 10 },\n\t{ label: $t('1分钟'), value: 60 },\n\t{ label: $t('10分钟'), value: 600 }\n]\n\nconst Profile: React.FC<RouterProps> = ({ f7route, f7router }) => {\n\tconst user_id = f7route.params.user_id as string\n\tconst is_from_message_page = f7route.query.from_page === 'message'\n\tconst dialog_id = Number(f7route.query.dialog_id) ?? 0\n\n\tconst liveRoomStore = useLiveRoomStore()\n\tconst liveStore = useLiveStore()\n\tconst cacheStore = useCacheStore()\n\tconst messageStore = useMessageStore()\n\n\tconst [userInfo, setUserInfo] = useState<any>()\n\tconst { watchAsyncFn } = useLoading()\n\n\t// 首次进去页面\n\tconst onPageBeforeIn = async () => {\n\t\ttry {\n\t\t\tconst userInfo = cacheStore.cacheContacts?.find((item) => item?.user_id === user_id)\n\t\t\tsetUserInfo(userInfo)\n\t\t\tUserService.getUserInfoApi({ user_id }).then(({ code, data }) => {\n\t\t\t\tif (code !== 200) return\n\t\t\t\tconst updateData = { ...userInfo, ...data }\n\t\t\t\tsetUserInfo(updateData)\n\t\t\t\tupdateCache({}, updateData)\n\t\t\t})\n\t\t} catch (error) {\n\t\t\tconsole.error('onPageBeforeIn', error)\n\t\t}\n\t}\n\n\t// 更新缓存，公共函数\n\tconst updateCache = (options: any = {}, outOptions: any = {}) => {\n\t\tconst updateInfo = { ...userInfo, preferences: { ...userInfo?.preferences, ...options }, ...outOptions }\n\t\tsetUserInfo(updateInfo)\n\t\tconst friendList = cacheStore.cacheContacts?.map((item) => {\n\t\t\tif (item?.user_id === user_id) {\n\t\t\t\treturn updateInfo\n\t\t\t}\n\t\t\treturn item\n\t\t})\n\t\tcacheStore.updateCacheContactsObj(friendList)\n\t}\n\n\tconst deleteFriend = async () => {\n\t\tconfirmMessage('是否确认删除好友', '删除好友', async () => {\n\t\t\twatchAsyncFn(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst { code } = await RelationService.deleteFriendApi(user_id)\n\t\t\t\t\tif (code !== 200) {\n\t\t\t\t\t\ttoastMessage('删除好友失败')\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tconst friendList = cacheStore.cacheContacts?.filter((item) => item?.user_id !== user_id)\n\t\t\t\t\tcacheStore.updateCacheContactsObj(friendList)\n\t\t\t\t\t// 刷新消息列表\n\t\t\t\t\tgetRemoteSession()\n\t\t\t\t\t// 刷新好友列表\n\t\t\t\t\tgetFriendList()\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttoastMessage('删除好友失败')\n\t\t\t\t} finally {\n\t\t\t\t\tf7router.back()\n\t\t\t\t}\n\t\t\t}, '删除中...')\n\t\t})\n\t}\n\n\tconst clearAllmessage = async () => {\n\t\tconfirmMessage('是否确认删除所有聊天记录', '删除聊天记录', async () => {\n\t\t\twatchAsyncFn(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tawait messageStore.deleteAllMessage(dialog_id)\n\t\t\t\t\ttoastMessage('删除聊天记录成功')\n\t\t\t\t} catch (error) {\n\t\t\t\t\ttoastMessage('删除聊天记录失败')\n\t\t\t\t}\n\t\t\t}, '删除中...')\n\t\t})\n\t}\n\n\t// 阅后即焚\n\tconst burnAfterRead = async (timeout?: number) => {\n\t\tlet action: boolean\n\t\tif (!timeout) {\n\t\t\taction =\n\t\t\t\tuserInfo?.preferences?.open_burn_after_reading === MessageBurnAfterRead.YES\n\t\t\t\t\t? MessageBurnAfterRead.NO\n\t\t\t\t\t: MessageBurnAfterRead.YES\n\t\t\ttimeout = 10\n\t\t} else {\n\t\t\taction = MessageBurnAfterRead.YES\n\t\t}\n\n\t\tconst tips_error = action === MessageBurnAfterRead.YES ? $t('阅后即焚失败') : $t('取消阅后即焚失败')\n\t\tupdateCache({ open_burn_after_reading_time_out: timeout, open_burn_after_reading: action })\n\t\ttry {\n\t\t\tconst { code } = await RelationService.setBurnApi({ action, user_id, timeout: timeout ?? 10 })\n\t\t\tif (code !== 200) {\n\t\t\t\ttoastMessage(tips_error)\n\t\t\t\treturn\n\t\t\t}\n\t\t} catch (error) {\n\t\t\ttoastMessage('设置阅后即焚失败')\n\t\t}\n\t}\n\n\t// 消息免打扰\n\tconst messageDisturb = async () => {\n\t\tconst is_silent =\n\t\t\tuserInfo?.preferences?.silent_notification === MessageNoDisturb.YES\n\t\t\t\t? MessageNoDisturb.NO\n\t\t\t\t: MessageNoDisturb.YES\n\t\tconst tips_error = is_silent === MessageNoDisturb.YES ? $t('消息免打扰失败') : $t('取消消息免打扰失败')\n\t\tupdateCache({ silent_notification: is_silent })\n\t\ttry {\n\t\t\tconst { code } = await RelationService.setSilenceApi({ is_silent, user_id })\n\t\t\tif (code !== 200) {\n\t\t\t\ttoastMessage(tips_error)\n\t\t\t\treturn\n\t\t\t}\n\t\t} catch (error) {\n\t\t\ttoastMessage('设置消息免打扰失败')\n\t\t}\n\t}\n\n\t// 黑名单\n\tconst blackList = async () => {\n\t\tconst is_add = userInfo?.relation_status === RelationStatus.BLACK\n\t\tconst tips_error = is_add ? $t('移除黑名单失败') : $t('添加黑名单失败')\n\t\tupdateCache({}, { relation_status: is_add ? RelationStatus.YES : RelationStatus.BLACK })\n\t\ttry {\n\t\t\tconst params = { user_id }\n\t\t\tconst { code } = is_add\n\t\t\t\t? await RelationService.deleteBlackListApi(params)\n\t\t\t\t: await RelationService.addBlackListApi(params)\n\t\t\tif (code !== 200) return toastMessage(tips_error)\n\t\t\t// 刷新消息列表\n\t\t\tgetRemoteSession()\n\t\t\t// 刷新好友列表\n\t\t\tgetFriendList()\n\t\t} catch (error) {\n\t\t\ttoastMessage(tips_error)\n\t\t}\n\t}\n\n\t// 设置阅后即焚时间\n\tconst changeTime = async (index: number) => {\n\t\tburnAfterRead(times[index].value)\n\t\t// watchAsyncFn(async () => {\n\t\t// \ttry {\n\t\t// \t\tconst { code } = await RelationService.setBurnTimeApi({\n\t\t// \t\t\tfriend_id: user_id,\n\t\t// \t\t\topen_burn_after_reading_time_out: times[index].value\n\t\t//         })\n\t\t// \t\tif (code !== 200) return toastMessage('设置失败')\n\t\t// \t\tupdateCache({ open_burn_after_reading_time_out: times[index].value })\n\t\t// \t} catch (error) {\n\t\t// \t\ttoastMessage('设置失败')\n\t\t// \t}\n\t\t// }, '设置中...')\n\t}\n\n\tconst is_burn_after_reading = useMemo(\n\t\t() => userInfo?.preferences?.open_burn_after_reading === MessageBurnAfterRead.YES,\n\t\t[userInfo?.preferences?.open_burn_after_reading]\n\t)\n\n\tconst handlerClick = async (isLabel: boolean = false) => {\n\t\tawait messageStore.init({\n\t\t\tdialogId: dialog_id ?? 0,\n\t\t\treceiverId: user_id ?? 0,\n\t\t\tisGroup: false,\n\t\t\treceiverInfo: {\n\t\t\t\tdialog_id: userInfo?.dialog_id,\n\t\t\t\tdialog_avatar: userInfo?.avatar,\n\t\t\t\tdialog_name: userInfo?.preferences?.remark ?? userInfo?.nickname\n\t\t\t},\n\t\t\tisLabel\n\t\t})\n\n\t\tf7router?.navigate(`/message/${user_id}/${dialog_id}/?is_group=false&dialog_name=${userInfo.nickname}`)\n\t}\n\n\tconst test = true\n\tconst call = async (video: boolean = false) => {\n\t\tif (test) {\n\t\t\tliveStore.createRoom({ recipient: user_id, isGroup: false, video })\n\t\t} else {\n\t\t\tliveRoomStore.call({ recipient: user_id, isGroup: false, video })\n\t\t}\n\t}\n\n\treturn (\n\t\t<Page className=\"profile-page\" noToolbar onPageBeforeIn={onPageBeforeIn}>\n\t\t\t<Navbar title={$t('用户信息')} backLink className=\"hidden-navbar-bg\" />\n\n\t\t\t<div className=\"mb-3 p-4 flex flex-col justify-center items-center\">\n\t\t\t\t<Avatar size={70} src={userInfo?.avatar} />\n\t\t\t\t<div className=\"mb-2 flex flex-col items-center\">\n\t\t\t\t\t<span className=\"\">{`@${userInfo?.nickname || ''}`}</span>\n\t\t\t\t\t<span className=\"\">{`${userInfo?.email || ''}`}</span>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex my-4 justify-evenly w-full\">\n\t\t\t\t\t{!is_from_message_page && (\n\t\t\t\t\t\t<div className=\"size-10  flex flex-col justify-center items-center\">\n\t\t\t\t\t\t\t<div className=\"mb-2 p-2 rounded-full bg-black bg-opacity-10\">\n\t\t\t\t\t\t\t\t<Link iconF7=\"chat_bubble_fill\" iconSize={22} onClick={async () => handlerClick()} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<span className=\"text-xs\">消息</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div className=\"size-10 flex flex-col justify-center items-center\" onClick={() => call()}>\n\t\t\t\t\t\t<div className=\"mb-2 p-2 rounded-full bg-black bg-opacity-10\">\n\t\t\t\t\t\t\t<Icon f7=\"phone_fill\" size={22} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span className=\"text-xs\">语音</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"size-10  flex flex-col justify-center items-center\" onClick={() => call(true)}>\n\t\t\t\t\t\t<div className=\"mb-2 p-2 rounded-full bg-black bg-opacity-10\">\n\t\t\t\t\t\t\t<Icon f7=\"videocam_fill\" size={22} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span className=\"text-xs\">视频</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"size-10  flex flex-col justify-center items-center\" onClick={() => {}}>\n\t\t\t\t\t\t<div className=\"mb-2 p-2 rounded-full bg-black bg-opacity-10\">\n\t\t\t\t\t\t\t<Link iconF7=\"tag_fill\" iconSize={22} onClick={async () => handlerClick(true)} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<span className=\"text-xs\">标注</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<List strong outline dividers className=\"bg-white m-0 mb-3\">\n\t\t\t\t<ListItem\n\t\t\t\t\tlink={`/user_remark/?remark=${userInfo?.preferences?.remark}&user_id=${userInfo?.user_id}`}\n\t\t\t\t\ttitle={$t('备注')}\n\t\t\t\t\tafter={userInfo?.preferences?.remark}\n\t\t\t\t></ListItem>\n\t\t\t\t<ListItem title={$t('阅后即焚')}>\n\t\t\t\t\t<Toggle slot=\"after\" checked={is_burn_after_reading} onChange={() => burnAfterRead()} />\n\t\t\t\t</ListItem>\n\t\t\t\t{is_burn_after_reading && (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{times.map((item, index) => (\n\t\t\t\t\t\t\t\t<ListItem title={item.label} key={index}>\n\t\t\t\t\t\t\t\t\t<Toggle\n\t\t\t\t\t\t\t\t\t\tslot=\"after\"\n\t\t\t\t\t\t\t\t\t\tonChange={() => changeTime(index)}\n\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\titem.value ===\n\t\t\t\t\t\t\t\t\t\t\t(userInfo?.preferences?.open_burn_after_reading_time_out ?? 10)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</li>\n\t\t\t\t)}\n\n\t\t\t\t<ListItem title={$t('消息免打扰')}>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tslot=\"after\"\n\t\t\t\t\t\tchecked={userInfo?.preferences?.silent_notification === MessageNoDisturb.YES}\n\t\t\t\t\t\tonChange={messageDisturb}\n\t\t\t\t\t/>\n\t\t\t\t</ListItem>\n\t\t\t\t<ListItem title={$t('添加到黑名单')}>\n\t\t\t\t\t<Toggle\n\t\t\t\t\t\tslot=\"after\"\n\t\t\t\t\t\tchecked={userInfo?.relation_status === RelationStatus.BLACK}\n\t\t\t\t\t\tonChange={blackList}\n\t\t\t\t\t/>\n\t\t\t\t</ListItem>\n\t\t\t</List>\n\n\t\t\t<List strong outline dividers className=\"bg-white m-0 mb-3\">\n\t\t\t\t<ListButton color=\"red\" onClick={clearAllmessage}>\n\t\t\t\t\t{$t('清除聊天记录')}\n\t\t\t\t</ListButton>\n\t\t\t\t<ListButton color=\"red\" title={$t('删除好友')} onClick={deleteFriend}></ListButton>\n\t\t\t</List>\n\t\t</Page>\n\t)\n}\n\nexport default Profile\n"],"names":["times","$t","Profile","f7route","f7router","user_id","is_from_message_page","dialog_id","useLiveRoomStore","liveStore","useLiveStore","cacheStore","useCacheStore","messageStore","useMessageStore","userInfo","setUserInfo","useState","watchAsyncFn","useLoading","onPageBeforeIn","_a","item","UserService","code","data","updateData","updateCache","error","options","outOptions","updateInfo","friendList","deleteFriend","confirmMessage","RelationService","toastMessage","getRemoteSession","getFriendList","clearAllmessage","burnAfterRead","timeout","action","MessageBurnAfterRead","tips_error","messageDisturb","is_silent","MessageNoDisturb","blackList","is_add","RelationStatus","params","changeTime","index","is_burn_after_reading","useMemo","handlerClick","isLabel","call","video","Page","jsx","Navbar","jsxs","Avatar","Link","Icon","List","ListItem","_b","_c","Toggle","_d","ListButton"],"mappings":"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"}