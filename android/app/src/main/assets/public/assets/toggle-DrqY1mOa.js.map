{"version":3,"file":"toggle-DrqY1mOa.js","sources":["../../node_modules/.pnpm/framework7-react@8.3.0/node_modules/framework7-react/components/toggle.js"],"sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport React, { forwardRef, useRef, useImperativeHandle } from 'react';\nimport { useIsomorphicLayoutEffect } from '../shared/use-isomorphic-layout-effect.js';\nimport { classNames, getExtraAttrs, emit } from '../shared/utils.js';\nimport { colorClasses } from '../shared/mixins.js';\nimport { f7ready, f7 } from '../shared/f7.js';\nimport { watchProp } from '../shared/watch-prop.js';\nimport { useTooltip } from '../shared/use-tooltip.js';\n\n\nconst Toggle = /*#__PURE__*/forwardRef((props, ref) => {\n  const f7Toggle = useRef(null);\n  const {\n    className,\n    id,\n    style,\n    init = true,\n    checked,\n    defaultChecked,\n    disabled,\n    readonly,\n    name,\n    value\n  } = props;\n  const extraAttrs = getExtraAttrs(props);\n  const elRef = useRef(null);\n  const inputElRef = useRef(null);\n  const onChange = event => {\n    emit(props, 'change', event);\n  };\n  useImperativeHandle(ref, () => ({\n    el: elRef.current,\n    f7Toggle: () => f7Toggle.current\n  }));\n  useTooltip(elRef, props);\n  watchProp(checked, newValue => {\n    if (!f7Toggle.current) return;\n    f7Toggle.current.checked = newValue;\n  });\n  const onToggleChange = toggleInstance => {\n    emit(props, 'toggleChange', toggleInstance.checked);\n  };\n  const toggleEvents = method => {\n    if (!f7Toggle.current) return;\n    f7Toggle.current[method]('toggleChange', onToggleChange);\n  };\n  const onMount = () => {\n    f7ready(() => {\n      if (!init || !elRef.current) return;\n      f7Toggle.current = f7.toggle.create({\n        el: elRef.current\n      });\n      toggleEvents('on');\n    });\n  };\n  const onDestroy = () => {\n    if (f7Toggle.current && f7Toggle.current.destroy && f7Toggle.current.$el) {\n      f7Toggle.current.destroy();\n    }\n    f7Toggle.current = null;\n  };\n  useIsomorphicLayoutEffect(() => {\n    toggleEvents('on');\n    if (inputElRef.current) {\n      inputElRef.current.addEventListener('change', onChange);\n    }\n    return () => {\n      toggleEvents('off');\n      if (inputElRef.current) {\n        inputElRef.current.removeEventListener('change', onChange);\n      }\n    };\n  });\n  useIsomorphicLayoutEffect(() => {\n    onMount();\n    return onDestroy;\n  }, []);\n  const labelClasses = classNames('toggle', className, {\n    disabled\n  }, colorClasses(props));\n  const inputEl = /*#__PURE__*/React.createElement(\"input\", {\n    ref: inputElRef,\n    type: \"checkbox\",\n    name: name,\n    disabled: disabled,\n    readOnly: readonly,\n    checked: checked,\n    defaultChecked: defaultChecked,\n    value: value,\n    onChange: () => {}\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    id: id,\n    style: style,\n    className: labelClasses,\n    ref: elRef\n  }, extraAttrs), inputEl, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"toggle-icon\"\n  }));\n});\nToggle.displayName = 'f7-toggle';\nexport default Toggle;"],"names":["_extends","target","i","source","key","Toggle","forwardRef","props","ref","f7Toggle","useRef","className","id","style","init","checked","defaultChecked","disabled","readonly","name","value","extraAttrs","getExtraAttrs","elRef","inputElRef","onChange","event","emit","useImperativeHandle","useTooltip","watchProp","newValue","onToggleChange","toggleInstance","toggleEvents","method","onMount","f7ready","f7","onDestroy","useIsomorphicLayoutEffect","labelClasses","classNames","colorClasses","inputEl","React","Toggle$1"],"mappings":"mHAAA,SAASA,GAAW,CAAE,OAAAA,EAAW,OAAO,OAAS,OAAO,OAAO,KAAM,EAAG,SAAUC,EAAQ,CAAE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CAAE,IAAIC,EAAS,UAAUD,CAAC,EAAG,QAASE,KAAOD,EAAc,OAAO,UAAU,eAAe,KAAKA,EAAQC,CAAG,IAAKH,EAAOG,CAAG,EAAID,EAAOC,CAAG,GAAS,OAAOH,CAAS,EAASD,EAAS,MAAM,KAAM,SAAS,CAAI,CAUnV,MAAMK,EAAsBC,EAAU,WAAC,CAACC,EAAOC,IAAQ,CACrD,MAAMC,EAAWC,SAAO,IAAI,EACtB,CACJ,UAAAC,EACA,GAAAC,EACA,MAAAC,EACA,KAAAC,EAAO,GACP,QAAAC,EACA,eAAAC,EACA,SAAAC,EACA,SAAAC,EACA,KAAAC,EACA,MAAAC,CACD,EAAGb,EACEc,EAAaC,EAAcf,CAAK,EAChCgB,EAAQb,SAAO,IAAI,EACnBc,EAAad,SAAO,IAAI,EACxBe,EAAWC,GAAS,CACxBC,EAAKpB,EAAO,SAAUmB,CAAK,CAC/B,EACEE,EAAmB,oBAACpB,EAAK,KAAO,CAC9B,GAAIe,EAAM,QACV,SAAU,IAAMd,EAAS,OAC1B,EAAC,EACFoB,EAAWN,EAAOhB,CAAK,EACvBuB,EAAUf,EAASgB,GAAY,CACxBtB,EAAS,UACdA,EAAS,QAAQ,QAAUsB,EAC/B,CAAG,EACD,MAAMC,EAAiBC,GAAkB,CACvCN,EAAKpB,EAAO,eAAgB0B,EAAe,OAAO,CACtD,EACQC,EAAeC,GAAU,CACxB1B,EAAS,SACdA,EAAS,QAAQ0B,CAAM,EAAE,eAAgBH,CAAc,CAC3D,EACQI,EAAU,IAAM,CACpBC,EAAQ,IAAM,CACR,CAACvB,GAAQ,CAACS,EAAM,UACpBd,EAAS,QAAU6B,EAAG,OAAO,OAAO,CAClC,GAAIf,EAAM,OAClB,CAAO,EACDW,EAAa,IAAI,EACvB,CAAK,CACL,EACQK,EAAY,IAAM,CAClB9B,EAAS,SAAWA,EAAS,QAAQ,SAAWA,EAAS,QAAQ,KACnEA,EAAS,QAAQ,UAEnBA,EAAS,QAAU,IACvB,EACE+B,EAA0B,KACxBN,EAAa,IAAI,EACbV,EAAW,SACbA,EAAW,QAAQ,iBAAiB,SAAUC,CAAQ,EAEjD,IAAM,CACXS,EAAa,KAAK,EACdV,EAAW,SACbA,EAAW,QAAQ,oBAAoB,SAAUC,CAAQ,CAEjE,EACG,EACDe,EAA0B,KACxBJ,IACOG,GACN,CAAE,CAAA,EACL,MAAME,EAAeC,EAAW,SAAU/B,EAAW,CACnD,SAAAM,CACJ,EAAK0B,EAAapC,CAAK,CAAC,EAChBqC,EAAuBC,EAAM,cAAc,QAAS,CACxD,IAAKrB,EACL,KAAM,WACN,KAAML,EACN,SAAUF,EACV,SAAUC,EACV,QAASH,EACT,eAAgBC,EAChB,MAAOI,EACP,SAAU,IAAM,CAAE,CACtB,CAAG,EACD,OAAoByB,EAAM,cAAc,QAAS7C,EAAS,CACxD,GAAIY,EACJ,MAAOC,EACP,UAAW4B,EACX,IAAKlB,CACN,EAAEF,CAAU,EAAGuB,EAAsBC,EAAM,cAAc,OAAQ,CAChE,UAAW,aACZ,CAAA,CAAC,CACJ,CAAC,EACDxC,EAAO,YAAc,YACrB,MAAAyC,EAAezC","x_google_ignoreList":[0]}